{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "PermissionFile",
  "description": "Permission file that can define a default permission, a set of permissions or a list of inlined permissions.",
  "type": "object",
  "properties": {
    "default": {
      "description": "The default permission set for the plugin",
      "anyOf": [
        {
          "$ref": "#/definitions/DefaultPermission"
        },
        {
          "type": "null"
        }
      ]
    },
    "set": {
      "description": "A list of permissions sets defined",
      "type": "array",
      "items": {
        "$ref": "#/definitions/PermissionSet"
      }
    },
    "permission": {
      "description": "A list of inlined permissions",
      "default": [],
      "type": "array",
      "items": {
        "$ref": "#/definitions/Permission"
      }
    }
  },
  "definitions": {
    "DefaultPermission": {
      "description": "The default permission set of the plugin.\n\nWorks similarly to a permission with the \"default\" identifier.",
      "type": "object",
      "required": [
        "permissions"
      ],
      "properties": {
        "version": {
          "description": "The version of the permission.",
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 1.0
        },
        "description": {
          "description": "Human-readable description of what the permission does. Tauri convention is to use `<h4>` headings in markdown content for Tauri documentation generation purposes.",
          "type": [
            "string",
            "null"
          ]
        },
        "permissions": {
          "description": "All permissions this set contains.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PermissionSet": {
      "description": "A set of direct permissions grouped together under a new name.",
      "type": "object",
      "required": [
        "description",
        "identifier",
        "permissions"
      ],
      "properties": {
        "identifier": {
          "description": "A unique identifier for the permission.",
          "type": "string"
        },
        "description": {
          "description": "Human-readable description of what the permission does.",
          "type": "string"
        },
        "permissions": {
          "description": "All permissions this set contains.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PermissionKind"
          }
        }
      }
    },
    "Permission": {
      "description": "Descriptions of explicit privileges of commands.\n\nIt can enable commands to be accessible in the frontend of the application.\n\nIf the scope is defined it can be used to fine grain control the access of individual or multiple commands.",
      "type": "object",
      "required": [
        "identifier"
      ],
      "properties": {
        "version": {
          "description": "The version of the permission.",
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 1.0
        },
        "identifier": {
          "description": "A unique identifier for the permission.",
          "type": "string"
        },
        "description": {
          "description": "Human-readable description of what the permission does. Tauri internal convention is to use `<h4>` headings in markdown content for Tauri documentation generation purposes.",
          "type": [
            "string",
            "null"
          ]
        },
        "commands": {
          "description": "Allowed or denied commands when using this permission.",
          "default": {
            "allow": [],
            "deny": []
          },
          "allOf": [
            {
              "$ref": "#/definitions/Commands"
            }
          ]
        },
        "scope": {
          "description": "Allowed or denied scoped when using this permission.",
          "allOf": [
            {
              "$ref": "#/definitions/Scopes"
            }
          ]
        },
        "platforms": {
          "description": "Target platforms this permission applies. By default all platforms are affected by this permission.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/definitions/Target"
          }
        }
      }
    },
    "Commands": {
      "description": "Allowed and denied commands inside a permission.\n\nIf two commands clash inside of `allow` and `deny`, it should be denied by default.",
      "type": "object",
      "properties": {
        "allow": {
          "description": "Allowed command.",
          "default": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "deny": {
          "description": "Denied command, which takes priority.",
          "default": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Scopes": {
      "description": "An argument for fine grained behavior control of Tauri commands.\n\nIt can be of any serde serializable type and is used to allow or prevent certain actions inside a Tauri command. The configured scope is passed to the command and will be enforced by the command implementation.\n\n## Example\n\n```json { \"allow\": [{ \"path\": \"$HOME/**\" }], \"deny\": [{ \"path\": \"$HOME/secret.txt\" }] } ```",
      "type": "object",
      "properties": {
        "allow": {
          "description": "Data that defines what is allowed by the scope.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/definitions/Value"
          }
        },
        "deny": {
          "description": "Data that defines what is denied by the scope. This should be prioritized by validation logic.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/definitions/Value"
          }
        }
      }
    },
    "Value": {
      "description": "All supported ACL values.",
      "anyOf": [
        {
          "description": "Represents a null JSON value.",
          "type": "null"
        },
        {
          "description": "Represents a [`bool`].",
          "type": "boolean"
        },
        {
          "description": "Represents a valid ACL [`Number`].",
          "allOf": [
            {
              "$ref": "#/definitions/Number"
            }
          ]
        },
        {
          "description": "Represents a [`String`].",
          "type": "string"
        },
        {
          "description": "Represents a list of other [`Value`]s.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Value"
          }
        },
        {
          "description": "Represents a map of [`String`] keys to [`Value`]s.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Value"
          }
        }
      ]
    },
    "Number": {
      "description": "A valid ACL number.",
      "anyOf": [
        {
          "description": "Represents an [`i64`].",
          "type": "integer",
          "format": "int64"
        },
        {
          "description": "Represents a [`f64`].",
          "type": "number",
          "format": "double"
        }
      ]
    },
    "Target": {
      "description": "Platform target.",
      "oneOf": [
        {
          "description": "MacOS.",
          "type": "string",
          "enum": [
            "macOS"
          ]
        },
        {
          "description": "Windows.",
          "type": "string",
          "enum": [
            "windows"
          ]
        },
        {
          "description": "Linux.",
          "type": "string",
          "enum": [
            "linux"
          ]
        },
        {
          "description": "Android.",
          "type": "string",
          "enum": [
            "android"
          ]
        },
        {
          "description": "iOS.",
          "type": "string",
          "enum": [
            "iOS"
          ]
        }
      ]
    },
    "PermissionKind": {
      "type": "string",
      "oneOf": [
        {
          "description": "Enables the appendToQueue command without any pre-configured scope.",
          "type": "string",
          "const": "allow-appendToQueue",
          "markdownDescription": "Enables the appendToQueue command without any pre-configured scope."
        },
        {
          "description": "Denies the appendToQueue command without any pre-configured scope.",
          "type": "string",
          "const": "deny-appendToQueue",
          "markdownDescription": "Denies the appendToQueue command without any pre-configured scope."
        },
        {
          "description": "Enables the append_to_queue command without any pre-configured scope.",
          "type": "string",
          "const": "allow-append-to-queue",
          "markdownDescription": "Enables the append_to_queue command without any pre-configured scope."
        },
        {
          "description": "Denies the append_to_queue command without any pre-configured scope.",
          "type": "string",
          "const": "deny-append-to-queue",
          "markdownDescription": "Denies the append_to_queue command without any pre-configured scope."
        },
        {
          "description": "Enables the authorize command without any pre-configured scope.",
          "type": "string",
          "const": "allow-authorize",
          "markdownDescription": "Enables the authorize command without any pre-configured scope."
        },
        {
          "description": "Denies the authorize command without any pre-configured scope.",
          "type": "string",
          "const": "deny-authorize",
          "markdownDescription": "Denies the authorize command without any pre-configured scope."
        },
        {
          "description": "Enables the getAuthorizationStatus command without any pre-configured scope.",
          "type": "string",
          "const": "allow-getAuthorizationStatus",
          "markdownDescription": "Enables the getAuthorizationStatus command without any pre-configured scope."
        },
        {
          "description": "Denies the getAuthorizationStatus command without any pre-configured scope.",
          "type": "string",
          "const": "deny-getAuthorizationStatus",
          "markdownDescription": "Denies the getAuthorizationStatus command without any pre-configured scope."
        },
        {
          "description": "Enables the getCurrentTrack command without any pre-configured scope.",
          "type": "string",
          "const": "allow-getCurrentTrack",
          "markdownDescription": "Enables the getCurrentTrack command without any pre-configured scope."
        },
        {
          "description": "Denies the getCurrentTrack command without any pre-configured scope.",
          "type": "string",
          "const": "deny-getCurrentTrack",
          "markdownDescription": "Denies the getCurrentTrack command without any pre-configured scope."
        },
        {
          "description": "Enables the getDeveloperToken command without any pre-configured scope.",
          "type": "string",
          "const": "allow-getDeveloperToken",
          "markdownDescription": "Enables the getDeveloperToken command without any pre-configured scope."
        },
        {
          "description": "Denies the getDeveloperToken command without any pre-configured scope.",
          "type": "string",
          "const": "deny-getDeveloperToken",
          "markdownDescription": "Denies the getDeveloperToken command without any pre-configured scope."
        },
        {
          "description": "Enables the getPlaybackState command without any pre-configured scope.",
          "type": "string",
          "const": "allow-getPlaybackState",
          "markdownDescription": "Enables the getPlaybackState command without any pre-configured scope."
        },
        {
          "description": "Denies the getPlaybackState command without any pre-configured scope.",
          "type": "string",
          "const": "deny-getPlaybackState",
          "markdownDescription": "Denies the getPlaybackState command without any pre-configured scope."
        },
        {
          "description": "Enables the getQueue command without any pre-configured scope.",
          "type": "string",
          "const": "allow-getQueue",
          "markdownDescription": "Enables the getQueue command without any pre-configured scope."
        },
        {
          "description": "Denies the getQueue command without any pre-configured scope.",
          "type": "string",
          "const": "deny-getQueue",
          "markdownDescription": "Denies the getQueue command without any pre-configured scope."
        },
        {
          "description": "Enables the getStorefront command without any pre-configured scope.",
          "type": "string",
          "const": "allow-getStorefront",
          "markdownDescription": "Enables the getStorefront command without any pre-configured scope."
        },
        {
          "description": "Denies the getStorefront command without any pre-configured scope.",
          "type": "string",
          "const": "deny-getStorefront",
          "markdownDescription": "Denies the getStorefront command without any pre-configured scope."
        },
        {
          "description": "Enables the getStorefrontId command without any pre-configured scope.",
          "type": "string",
          "const": "allow-getStorefrontId",
          "markdownDescription": "Enables the getStorefrontId command without any pre-configured scope."
        },
        {
          "description": "Denies the getStorefrontId command without any pre-configured scope.",
          "type": "string",
          "const": "deny-getStorefrontId",
          "markdownDescription": "Denies the getStorefrontId command without any pre-configured scope."
        },
        {
          "description": "Enables the getUserToken command without any pre-configured scope.",
          "type": "string",
          "const": "allow-getUserToken",
          "markdownDescription": "Enables the getUserToken command without any pre-configured scope."
        },
        {
          "description": "Denies the getUserToken command without any pre-configured scope.",
          "type": "string",
          "const": "deny-getUserToken",
          "markdownDescription": "Denies the getUserToken command without any pre-configured scope."
        },
        {
          "description": "Enables the get_authorization_status command without any pre-configured scope.",
          "type": "string",
          "const": "allow-get-authorization-status",
          "markdownDescription": "Enables the get_authorization_status command without any pre-configured scope."
        },
        {
          "description": "Denies the get_authorization_status command without any pre-configured scope.",
          "type": "string",
          "const": "deny-get-authorization-status",
          "markdownDescription": "Denies the get_authorization_status command without any pre-configured scope."
        },
        {
          "description": "Enables the get_current_track command without any pre-configured scope.",
          "type": "string",
          "const": "allow-get-current-track",
          "markdownDescription": "Enables the get_current_track command without any pre-configured scope."
        },
        {
          "description": "Denies the get_current_track command without any pre-configured scope.",
          "type": "string",
          "const": "deny-get-current-track",
          "markdownDescription": "Denies the get_current_track command without any pre-configured scope."
        },
        {
          "description": "Enables the get_developer_token command without any pre-configured scope.",
          "type": "string",
          "const": "allow-get-developer-token",
          "markdownDescription": "Enables the get_developer_token command without any pre-configured scope."
        },
        {
          "description": "Denies the get_developer_token command without any pre-configured scope.",
          "type": "string",
          "const": "deny-get-developer-token",
          "markdownDescription": "Denies the get_developer_token command without any pre-configured scope."
        },
        {
          "description": "Enables the get_playback_state command without any pre-configured scope.",
          "type": "string",
          "const": "allow-get-playback-state",
          "markdownDescription": "Enables the get_playback_state command without any pre-configured scope."
        },
        {
          "description": "Denies the get_playback_state command without any pre-configured scope.",
          "type": "string",
          "const": "deny-get-playback-state",
          "markdownDescription": "Denies the get_playback_state command without any pre-configured scope."
        },
        {
          "description": "Enables the get_queue command without any pre-configured scope.",
          "type": "string",
          "const": "allow-get-queue",
          "markdownDescription": "Enables the get_queue command without any pre-configured scope."
        },
        {
          "description": "Denies the get_queue command without any pre-configured scope.",
          "type": "string",
          "const": "deny-get-queue",
          "markdownDescription": "Denies the get_queue command without any pre-configured scope."
        },
        {
          "description": "Enables the get_storefront_id command without any pre-configured scope.",
          "type": "string",
          "const": "allow-get-storefront-id",
          "markdownDescription": "Enables the get_storefront_id command without any pre-configured scope."
        },
        {
          "description": "Denies the get_storefront_id command without any pre-configured scope.",
          "type": "string",
          "const": "deny-get-storefront-id",
          "markdownDescription": "Denies the get_storefront_id command without any pre-configured scope."
        },
        {
          "description": "Enables the get_user_token command without any pre-configured scope.",
          "type": "string",
          "const": "allow-get-user-token",
          "markdownDescription": "Enables the get_user_token command without any pre-configured scope."
        },
        {
          "description": "Denies the get_user_token command without any pre-configured scope.",
          "type": "string",
          "const": "deny-get-user-token",
          "markdownDescription": "Denies the get_user_token command without any pre-configured scope."
        },
        {
          "description": "Enables the initialize command without any pre-configured scope.",
          "type": "string",
          "const": "allow-initialize",
          "markdownDescription": "Enables the initialize command without any pre-configured scope."
        },
        {
          "description": "Denies the initialize command without any pre-configured scope.",
          "type": "string",
          "const": "deny-initialize",
          "markdownDescription": "Denies the initialize command without any pre-configured scope."
        },
        {
          "description": "Enables the insertAtPosition command without any pre-configured scope.",
          "type": "string",
          "const": "allow-insertAtPosition",
          "markdownDescription": "Enables the insertAtPosition command without any pre-configured scope."
        },
        {
          "description": "Denies the insertAtPosition command without any pre-configured scope.",
          "type": "string",
          "const": "deny-insertAtPosition",
          "markdownDescription": "Denies the insertAtPosition command without any pre-configured scope."
        },
        {
          "description": "Enables the insert_at_position command without any pre-configured scope.",
          "type": "string",
          "const": "allow-insert-at-position",
          "markdownDescription": "Enables the insert_at_position command without any pre-configured scope."
        },
        {
          "description": "Denies the insert_at_position command without any pre-configured scope.",
          "type": "string",
          "const": "deny-insert-at-position",
          "markdownDescription": "Denies the insert_at_position command without any pre-configured scope."
        },
        {
          "description": "Enables the next command without any pre-configured scope.",
          "type": "string",
          "const": "allow-next",
          "markdownDescription": "Enables the next command without any pre-configured scope."
        },
        {
          "description": "Denies the next command without any pre-configured scope.",
          "type": "string",
          "const": "deny-next",
          "markdownDescription": "Denies the next command without any pre-configured scope."
        },
        {
          "description": "Enables the pause command without any pre-configured scope.",
          "type": "string",
          "const": "allow-pause",
          "markdownDescription": "Enables the pause command without any pre-configured scope."
        },
        {
          "description": "Denies the pause command without any pre-configured scope.",
          "type": "string",
          "const": "deny-pause",
          "markdownDescription": "Denies the pause command without any pre-configured scope."
        },
        {
          "description": "Enables the ping command without any pre-configured scope.",
          "type": "string",
          "const": "allow-ping",
          "markdownDescription": "Enables the ping command without any pre-configured scope."
        },
        {
          "description": "Denies the ping command without any pre-configured scope.",
          "type": "string",
          "const": "deny-ping",
          "markdownDescription": "Denies the ping command without any pre-configured scope."
        },
        {
          "description": "Enables the play command without any pre-configured scope.",
          "type": "string",
          "const": "allow-play",
          "markdownDescription": "Enables the play command without any pre-configured scope."
        },
        {
          "description": "Denies the play command without any pre-configured scope.",
          "type": "string",
          "const": "deny-play",
          "markdownDescription": "Denies the play command without any pre-configured scope."
        },
        {
          "description": "Enables the previous command without any pre-configured scope.",
          "type": "string",
          "const": "allow-previous",
          "markdownDescription": "Enables the previous command without any pre-configured scope."
        },
        {
          "description": "Denies the previous command without any pre-configured scope.",
          "type": "string",
          "const": "deny-previous",
          "markdownDescription": "Denies the previous command without any pre-configured scope."
        },
        {
          "description": "Enables the registerListener command without any pre-configured scope.",
          "type": "string",
          "const": "allow-registerListener",
          "markdownDescription": "Enables the registerListener command without any pre-configured scope."
        },
        {
          "description": "Denies the registerListener command without any pre-configured scope.",
          "type": "string",
          "const": "deny-registerListener",
          "markdownDescription": "Denies the registerListener command without any pre-configured scope."
        },
        {
          "description": "Enables the removeFromQueue command without any pre-configured scope.",
          "type": "string",
          "const": "allow-removeFromQueue",
          "markdownDescription": "Enables the removeFromQueue command without any pre-configured scope."
        },
        {
          "description": "Denies the removeFromQueue command without any pre-configured scope.",
          "type": "string",
          "const": "deny-removeFromQueue",
          "markdownDescription": "Denies the removeFromQueue command without any pre-configured scope."
        },
        {
          "description": "Enables the remove_from_queue command without any pre-configured scope.",
          "type": "string",
          "const": "allow-remove-from-queue",
          "markdownDescription": "Enables the remove_from_queue command without any pre-configured scope."
        },
        {
          "description": "Denies the remove_from_queue command without any pre-configured scope.",
          "type": "string",
          "const": "deny-remove-from-queue",
          "markdownDescription": "Denies the remove_from_queue command without any pre-configured scope."
        },
        {
          "description": "Enables the seek command without any pre-configured scope.",
          "type": "string",
          "const": "allow-seek",
          "markdownDescription": "Enables the seek command without any pre-configured scope."
        },
        {
          "description": "Denies the seek command without any pre-configured scope.",
          "type": "string",
          "const": "deny-seek",
          "markdownDescription": "Denies the seek command without any pre-configured scope."
        },
        {
          "description": "Enables the setDeveloperToken command without any pre-configured scope.",
          "type": "string",
          "const": "allow-setDeveloperToken",
          "markdownDescription": "Enables the setDeveloperToken command without any pre-configured scope."
        },
        {
          "description": "Denies the setDeveloperToken command without any pre-configured scope.",
          "type": "string",
          "const": "deny-setDeveloperToken",
          "markdownDescription": "Denies the setDeveloperToken command without any pre-configured scope."
        },
        {
          "description": "Enables the setQueue command without any pre-configured scope.",
          "type": "string",
          "const": "allow-setQueue",
          "markdownDescription": "Enables the setQueue command without any pre-configured scope."
        },
        {
          "description": "Denies the setQueue command without any pre-configured scope.",
          "type": "string",
          "const": "deny-setQueue",
          "markdownDescription": "Denies the setQueue command without any pre-configured scope."
        },
        {
          "description": "Enables the setUserToken command without any pre-configured scope.",
          "type": "string",
          "const": "allow-setUserToken",
          "markdownDescription": "Enables the setUserToken command without any pre-configured scope."
        },
        {
          "description": "Denies the setUserToken command without any pre-configured scope.",
          "type": "string",
          "const": "deny-setUserToken",
          "markdownDescription": "Denies the setUserToken command without any pre-configured scope."
        },
        {
          "description": "Enables the set_developer_token command without any pre-configured scope.",
          "type": "string",
          "const": "allow-set-developer-token",
          "markdownDescription": "Enables the set_developer_token command without any pre-configured scope."
        },
        {
          "description": "Denies the set_developer_token command without any pre-configured scope.",
          "type": "string",
          "const": "deny-set-developer-token",
          "markdownDescription": "Denies the set_developer_token command without any pre-configured scope."
        },
        {
          "description": "Enables the set_queue command without any pre-configured scope.",
          "type": "string",
          "const": "allow-set-queue",
          "markdownDescription": "Enables the set_queue command without any pre-configured scope."
        },
        {
          "description": "Denies the set_queue command without any pre-configured scope.",
          "type": "string",
          "const": "deny-set-queue",
          "markdownDescription": "Denies the set_queue command without any pre-configured scope."
        },
        {
          "description": "Enables the skipToItem command without any pre-configured scope.",
          "type": "string",
          "const": "allow-skipToItem",
          "markdownDescription": "Enables the skipToItem command without any pre-configured scope."
        },
        {
          "description": "Denies the skipToItem command without any pre-configured scope.",
          "type": "string",
          "const": "deny-skipToItem",
          "markdownDescription": "Denies the skipToItem command without any pre-configured scope."
        },
        {
          "description": "Enables the skip_to_item command without any pre-configured scope.",
          "type": "string",
          "const": "allow-skip-to-item",
          "markdownDescription": "Enables the skip_to_item command without any pre-configured scope."
        },
        {
          "description": "Denies the skip_to_item command without any pre-configured scope.",
          "type": "string",
          "const": "deny-skip-to-item",
          "markdownDescription": "Denies the skip_to_item command without any pre-configured scope."
        },
        {
          "description": "Enables the stop command without any pre-configured scope.",
          "type": "string",
          "const": "allow-stop",
          "markdownDescription": "Enables the stop command without any pre-configured scope."
        },
        {
          "description": "Denies the stop command without any pre-configured scope.",
          "type": "string",
          "const": "deny-stop",
          "markdownDescription": "Denies the stop command without any pre-configured scope."
        },
        {
          "description": "Enables the unauthorize command without any pre-configured scope.",
          "type": "string",
          "const": "allow-unauthorize",
          "markdownDescription": "Enables the unauthorize command without any pre-configured scope."
        },
        {
          "description": "Denies the unauthorize command without any pre-configured scope.",
          "type": "string",
          "const": "deny-unauthorize",
          "markdownDescription": "Denies the unauthorize command without any pre-configured scope."
        },
        {
          "description": "Default permissions for the musickit plugin\n#### This default permission set includes:\n\n- `allowInitialize`\n- `allowAuthorize`\n- `allowUnauthorize`\n- `allowGetAuthorizationStatus`\n- `allowGetUserToken`\n- `allowSetUserToken`\n- `allowGetDeveloperToken`\n- `allowSetDeveloperToken`\n- `allowGetStorefrontId`\n- `allowGetStorefront`\n- `allowSetStorefront`\n- `allowGetQueue`\n- `allowPlay`\n- `allowPause`\n- `allowStop`\n- `allowSeek`\n- `allowNext`\n- `allowPrevious`\n- `allowSkipToItem`\n- `allowSetQueue`\n- `allowGetCurrentTrack`\n- `allowGetPlaybackState`\n- `allowAppendTracksToQueue`\n- `allowInsertTrackAtPosition`\n- `allowRemoveTrackFromQueue`\n- `allowRegisterListener`",
          "type": "string",
          "const": "default",
          "markdownDescription": "Default permissions for the musickit plugin\n#### This default permission set includes:\n\n- `allowInitialize`\n- `allowAuthorize`\n- `allowUnauthorize`\n- `allowGetAuthorizationStatus`\n- `allowGetUserToken`\n- `allowSetUserToken`\n- `allowGetDeveloperToken`\n- `allowSetDeveloperToken`\n- `allowGetStorefrontId`\n- `allowGetStorefront`\n- `allowSetStorefront`\n- `allowGetQueue`\n- `allowPlay`\n- `allowPause`\n- `allowStop`\n- `allowSeek`\n- `allowNext`\n- `allowPrevious`\n- `allowSkipToItem`\n- `allowSetQueue`\n- `allowGetCurrentTrack`\n- `allowGetPlaybackState`\n- `allowAppendTracksToQueue`\n- `allowInsertTrackAtPosition`\n- `allowRemoveTrackFromQueue`\n- `allowRegisterListener`"
        },
        {
          "description": "Allows initializing the MusicKit plugin",
          "type": "string",
          "const": "allowInitialize",
          "markdownDescription": "Allows initializing the MusicKit plugin"
        },
        {
          "description": "Allows authorizing the MusicKit plugin",
          "type": "string",
          "const": "allowAuthorize",
          "markdownDescription": "Allows authorizing the MusicKit plugin"
        },
        {
          "description": "Allows unauthorizing the MusicKit plugin",
          "type": "string",
          "const": "allowUnauthorize",
          "markdownDescription": "Allows unauthorizing the MusicKit plugin"
        },
        {
          "description": "Allows getting the authorization status",
          "type": "string",
          "const": "allowGetAuthorizationStatus",
          "markdownDescription": "Allows getting the authorization status"
        },
        {
          "description": "Allows getting the user token",
          "type": "string",
          "const": "allowGetUserToken",
          "markdownDescription": "Allows getting the user token"
        },
        {
          "description": "Allows setting the user token",
          "type": "string",
          "const": "allowSetUserToken",
          "markdownDescription": "Allows setting the user token"
        },
        {
          "description": "Allows getting the developer token",
          "type": "string",
          "const": "allowGetDeveloperToken",
          "markdownDescription": "Allows getting the developer token"
        },
        {
          "description": "Allows setting the developer token",
          "type": "string",
          "const": "allowSetDeveloperToken",
          "markdownDescription": "Allows setting the developer token"
        },
        {
          "description": "Allows getting the storefront ID",
          "type": "string",
          "const": "allowGetStorefrontId",
          "markdownDescription": "Allows getting the storefront ID"
        },
        {
          "description": "Allows getting the storefront",
          "type": "string",
          "const": "allowGetStorefront",
          "markdownDescription": "Allows getting the storefront"
        },
        {
          "description": "Allows setting the storefront ID",
          "type": "string",
          "const": "allowSetStorefront",
          "markdownDescription": "Allows setting the storefront ID"
        },
        {
          "description": "Allows getting the queue",
          "type": "string",
          "const": "allowGetQueue",
          "markdownDescription": "Allows getting the queue"
        },
        {
          "description": "Allows playing music",
          "type": "string",
          "const": "allowPlay",
          "markdownDescription": "Allows playing music"
        },
        {
          "description": "Allows pausing music",
          "type": "string",
          "const": "allowPause",
          "markdownDescription": "Allows pausing music"
        },
        {
          "description": "Allows stopping music",
          "type": "string",
          "const": "allowStop",
          "markdownDescription": "Allows stopping music"
        },
        {
          "description": "Allows seeking to a specific time",
          "type": "string",
          "const": "allowSeek",
          "markdownDescription": "Allows seeking to a specific time"
        },
        {
          "description": "Allows skipping to the next track",
          "type": "string",
          "const": "allowNext",
          "markdownDescription": "Allows skipping to the next track"
        },
        {
          "description": "Allows skipping to the previous track",
          "type": "string",
          "const": "allowPrevious",
          "markdownDescription": "Allows skipping to the previous track"
        },
        {
          "description": "Allows skipping to a specific item in the queue",
          "type": "string",
          "const": "allowSkipToItem",
          "markdownDescription": "Allows skipping to a specific item in the queue"
        },
        {
          "description": "Allows setting the queue",
          "type": "string",
          "const": "allowSetQueue",
          "markdownDescription": "Allows setting the queue"
        },
        {
          "description": "Allows getting the current track",
          "type": "string",
          "const": "allowGetCurrentTrack",
          "markdownDescription": "Allows getting the current track"
        },
        {
          "description": "Allows getting the playback state",
          "type": "string",
          "const": "allowGetPlaybackState",
          "markdownDescription": "Allows getting the playback state"
        },
        {
          "description": "Allows appending tracks to the queue",
          "type": "string",
          "const": "allowAppendTracksToQueue",
          "markdownDescription": "Allows appending tracks to the queue"
        },
        {
          "description": "Allows inserting a track at a position in the queue",
          "type": "string",
          "const": "allowInsertTrackAtPosition",
          "markdownDescription": "Allows inserting a track at a position in the queue"
        },
        {
          "description": "Allows removing a track from the queue",
          "type": "string",
          "const": "allowRemoveTrackFromQueue",
          "markdownDescription": "Allows removing a track from the queue"
        },
        {
          "description": "Allows registering event listeners",
          "type": "string",
          "const": "allowRegisterListener",
          "markdownDescription": "Allows registering event listeners"
        }
      ]
    }
  }
}